/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.User;



import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.User.User;
import Business.UserAccount.UserAccount;
import Business.Utility.SendEmailUtility;
import UserInterface.LoginJFrame;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juhip
 */
public class UserRegistrationPage2JPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmpJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise ent;
    private UserAccount userAccount;
    private Organization org;
    private Ecosystem system;
    private User user;
    private ArrayList<String> reasonForTreatment = new ArrayList<>();
    private ArrayList<String> medicalconditions = new ArrayList<>();
    private ArrayList<String> medicalSymptoms = new ArrayList<>();
       
    public UserRegistrationPage2JPanel(JPanel userProcessContainer,Enterprise ent, UserAccount userAccount, Ecosystem system, Organization org, User user) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.system = system;
        this.ent=ent;
        this.org = org;
        this.user = user;
        
    }
     public class HeaderColor extends DefaultTableCellRenderer {
        public HeaderColor() {
            setOpaque(true);
        }
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused, int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);         
           setBackground(new java.awt.Color(74,122,193));
            return this;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableReasonsTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        btnAddReason = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedReasonsTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        availableMedicalConditionJTable = new javax.swing.JTable();
        btnMedConditions = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        selectedMedicalConditionJTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        availableMedicalSymptomsJTable = new javax.swing.JTable();
        btnMedicalSymptoms = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        selectedMedicalSymptomsJTable = new javax.swing.JTable();
        lblDoctorslist1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnSubmit.setBackground(new java.awt.Color(255, 255, 255));
        btnSubmit.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(0, 255, 204));
        btnSubmit.setText("Submit");
        btnSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSubmitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSubmitMouseExited(evt);
            }
        });
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        availableReasonsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"ADHD"},
                {"Alcohol"},
                {"Anxiety"},
                {"Autism"},
                {"Behavior/Conduct"},
                {"Bipolar Disorder"},
                {"Depression"},
                {"Divorce"},
                {"Drug/ Substance Use"},
                {"Family Conflict"},
                {"Grief"},
                {"Infertility"},
                {"Mania"},
                {"Marital/ Domestic Issues"},
                {"Obsessive-Compulsive (OCD)"},
                {"Phobia"},
                {"PTSD and Trauma"},
                {"Racial Identity"},
                {"Smoking"},
                {"Sleep or Insomnia"},
                {"Suicidal/ Self harm thoughts"},
                {null}
            },
            new String [] {
                "Select reasons"
            }
        ));
        jScrollPane1.setViewportView(availableReasonsTable);

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel12.setText("Select reasons for treatment");

        btnAddReason.setBackground(new java.awt.Color(255, 255, 255));
        btnAddReason.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAddReason.setForeground(new java.awt.Color(0, 255, 204));
        btnAddReason.setText("Add");
        btnAddReason.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddReason.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddReasonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddReasonMouseExited(evt);
            }
        });
        btnAddReason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddReasonActionPerformed(evt);
            }
        });

        selectedReasonsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Selected reasons"
            }
        ));
        jScrollPane2.setViewportView(selectedReasonsTable);

        jLabel13.setText("My Medical conditions:");

        availableMedicalConditionJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Allergy"},
                {"Arthritis"},
                {"Asthama"},
                {"Back Pain"},
                {"Breathing / Respiratory issues"},
                {"Bronchitis"},
                {"Cancer"},
                {"AIDS/HIV"},
                {"Chronic Pain"},
                {"Congestive Heart failure"},
                {"COPD"},
                {"Diabetes"},
                {"Erectile Dysfunction"},
                {"Headaches"},
                {"Hearing difficulties"},
                {"Hernia"},
                {"Hypothyroidism"},
                {"Kidney Failure"},
                {null}
            },
            new String [] {
                "Select Medical Conditions"
            }
        ));
        jScrollPane3.setViewportView(availableMedicalConditionJTable);

        btnMedConditions.setBackground(new java.awt.Color(255, 255, 255));
        btnMedConditions.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnMedConditions.setForeground(new java.awt.Color(0, 255, 204));
        btnMedConditions.setText("Add");
        btnMedConditions.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedConditions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMedConditionsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMedConditionsMouseExited(evt);
            }
        });
        btnMedConditions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedConditionsActionPerformed(evt);
            }
        });

        selectedMedicalConditionJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Selected Medical Conditions"
            }
        ));
        jScrollPane4.setViewportView(selectedMedicalConditionJTable);

        jLabel14.setText("My Medical Symptoms:");

        availableMedicalSymptomsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Nausea"},
                {"Headache"},
                {"Vomiting"},
                {"Sleepy"},
                {"Fatigue"},
                {"Itching"},
                {"Fever"},
                {"Sneezy"},
                {"High Blood Pressure"},
                {"Fast Pulse"},
                {"Chest Pain"},
                {"Weight Loss"},
                {"Weight Gain"},
                {null}
            },
            new String [] {
                "Select Medical Symptoms"
            }
        ));
        jScrollPane5.setViewportView(availableMedicalSymptomsJTable);

        btnMedicalSymptoms.setBackground(new java.awt.Color(255, 255, 255));
        btnMedicalSymptoms.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnMedicalSymptoms.setForeground(new java.awt.Color(0, 255, 204));
        btnMedicalSymptoms.setText("Add");
        btnMedicalSymptoms.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedicalSymptoms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMedicalSymptomsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMedicalSymptomsMouseExited(evt);
            }
        });
        btnMedicalSymptoms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicalSymptomsActionPerformed(evt);
            }
        });

        selectedMedicalSymptomsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Selected Medical Symptoms"
            }
        ));
        jScrollPane6.setViewportView(selectedMedicalSymptomsJTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(btnMedicalSymptoms)
                                .addGap(52, 52, 52))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)))
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddReason))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addComponent(btnMedConditions)))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnAddReason)))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnMedConditions)))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnMedicalSymptoms)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(26, 26, 26))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 770, 470));

        lblDoctorslist1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        lblDoctorslist1.setForeground(new java.awt.Color(0, 255, 204));
        lblDoctorslist1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoctorslist1.setText("Let's Start");
        add(lblDoctorslist1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, 210, 80));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddReasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddReasonActionPerformed
        // TODO add your handling code here:
        int row = availableReasonsTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
        String selectedResult=(String)availableReasonsTable.getValueAt(row, 0);
            reasonForTreatment.add(selectedResult);
            populateSelectedReasonsTable();
        }
    }//GEN-LAST:event_btnAddReasonActionPerformed

    private void btnMedConditionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedConditionsActionPerformed
        // TODO add your handling code here:
        int row = availableMedicalConditionJTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
        String selectedResult=(String)availableMedicalConditionJTable.getValueAt(row, 0);
            medicalconditions.add(selectedResult);
            populateSelectedMedicalConditionsTable();
        }
    }//GEN-LAST:event_btnMedConditionsActionPerformed

    private void btnMedicalSymptomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicalSymptomsActionPerformed
        // TODO add your handling code here:
        int row = availableMedicalSymptomsJTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
        String selectedResult=(String)availableMedicalSymptomsJTable.getValueAt(row, 0);
            medicalSymptoms.add(selectedResult);
            populateSelectedMedicalSysmptomsTable();
        }
    }//GEN-LAST:event_btnMedicalSymptomsActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        if(!reasonForTreatment.isEmpty()){
            for(String str: reasonForTreatment){
                user.getMedicalDetails().getReasonForTreatment().add(str);
            }
        }
        
        if(!medicalconditions.isEmpty()){
            for(String str: medicalconditions){
                user.getMedicalDetails().getMedicalConditions().add(str);
            }
        }
        
        if(!medicalSymptoms.isEmpty()){
            for(String str: medicalSymptoms){
                user.getMedicalDetails().getMedicalSymptoms().add(str);
            }
        }
        system.getUserAccountDirectory().addUserAccount(user);
        system.getUserDirectory().addUser(user);
        JOptionPane.showMessageDialog(this, "User registered successfully!, Please login to continue");
        
        
//        userProcessContainer.removeAll();
//        MainJFrame toLoginAndContinue=new MainJFrame();
//        userProcessContainer.add("toLoginAndContinue", toLoginAndContinue);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnSubmitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubmitMouseEntered
        // TODO add your handling code here:
        btnSubmit.setBackground(new Color(0,255,204));
        btnSubmit.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnSubmitMouseEntered

    private void btnSubmitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubmitMouseExited
        // TODO add your handling code here:
        btnSubmit.setBackground(new Color(255,255,255));
        btnSubmit.setForeground(new Color(0,255,204));
    }//GEN-LAST:event_btnSubmitMouseExited

    private void btnAddReasonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddReasonMouseEntered
        // TODO add your handling code here:
        btnAddReason.setBackground(new Color(0,255,204));
        btnAddReason.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnAddReasonMouseEntered

    private void btnAddReasonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddReasonMouseExited
        // TODO add your handling code here:
        btnAddReason.setBackground(new Color(255,255,255));
        btnAddReason.setForeground(new Color(0,255,204));
    }//GEN-LAST:event_btnAddReasonMouseExited

    private void btnMedConditionsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMedConditionsMouseEntered
        // TODO add your handling code here:
        btnMedConditions.setBackground(new Color(0,255,204));
        btnMedConditions.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnMedConditionsMouseEntered

    private void btnMedConditionsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMedConditionsMouseExited
        // TODO add your handling code here:
        btnMedConditions.setBackground(new Color(255,255,255));
        btnMedConditions.setForeground(new Color(0,255,204));
    }//GEN-LAST:event_btnMedConditionsMouseExited

    private void btnMedicalSymptomsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMedicalSymptomsMouseEntered
        // TODO add your handling code here:
        btnMedicalSymptoms.setBackground(new Color(0,255,204));
        btnMedicalSymptoms.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnMedicalSymptomsMouseEntered

    private void btnMedicalSymptomsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMedicalSymptomsMouseExited
        // TODO add your handling code here:
        btnMedicalSymptoms.setBackground(new Color(255,255,255));
        btnMedicalSymptoms.setForeground(new Color(0,255,204));
    }//GEN-LAST:event_btnMedicalSymptomsMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable availableMedicalConditionJTable;
    private javax.swing.JTable availableMedicalSymptomsJTable;
    private javax.swing.JTable availableReasonsTable;
    private javax.swing.JButton btnAddReason;
    private javax.swing.JButton btnMedConditions;
    private javax.swing.JButton btnMedicalSymptoms;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblDoctorslist1;
    private javax.swing.JTable selectedMedicalConditionJTable;
    private javax.swing.JTable selectedMedicalSymptomsJTable;
    private javax.swing.JTable selectedReasonsTable;
    // End of variables declaration//GEN-END:variables

        public void populateSelectedReasonsTable(){
        DefaultTableModel model = (DefaultTableModel) selectedReasonsTable.getModel();
        model.setRowCount(0);
           for(String req : reasonForTreatment){
            Object[] row = new Object[1];
            row[0] = req;
            model.addRow(row);
        }   
        }
        
        public void populateSelectedMedicalConditionsTable(){
        DefaultTableModel model = (DefaultTableModel) selectedMedicalConditionJTable.getModel();
        model.setRowCount(0);
           for(String req : medicalconditions){
            Object[] row = new Object[1];
            row[0] = req;
            model.addRow(row);
        }   
        }
        
         public void populateSelectedMedicalSysmptomsTable(){
        DefaultTableModel model = (DefaultTableModel) selectedMedicalSymptomsJTable.getModel();
        model.setRowCount(0);
           for(String req : medicalSymptoms){
            Object[] row = new Object[1];
            row[0] = req;
            model.addRow(row);
        }   
        }
}
