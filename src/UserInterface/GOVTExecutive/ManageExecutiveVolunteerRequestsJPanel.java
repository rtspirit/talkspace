/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.GOVTExecutive;

import Business.Enterprise.Enterprise;
import Business.Executive.Executive;
import Business.HealthMinistryRepresentative.Representative;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RationRequest;
import Business.WorkQueue.VolunteerRequest;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rtspi
 */
public class ManageExecutiveVolunteerRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageExecutiveVolunteerRequestsJPanel
     */
     private JPanel userProcessContainer;
    private Enterprise enterprise;
     private UserAccount useraccount;
    private OrganizationDirectory orgDir;
    private Organization org;
    Executive executive;
     Representative representative;
    public ManageExecutiveVolunteerRequestsJPanel(JPanel userProcessContainer, Enterprise enterprise,UserAccount useraccount,OrganizationDirectory orgDir, Organization org) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.useraccount = useraccount;
        this.orgDir = orgDir;
        this.org = org;
        populateRepresentativeComboBox();
        populateTable();
    }
    
    public void populateRepresentativeComboBox(){
        
        representativeJComboBox.removeAllItems();
        for(Organization org1 : orgDir.getOrgList()){
            
            for(Representative ra: org1.getRepresentativeDirectory().getRepresentativeList()){
                
                    representativeJComboBox.addItem(ra);
                
                
            }
            
        }
        
        
    }
    
    public void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) tblRequestHistory.getModel();
        model.setRowCount(0);
        executive = org.getExecutiveDirectory().findUserByUserName(useraccount.getUsername());
        for(VolunteerRequest req : executive.getVolunteerRequestDirectory().getVolunteerRequestList()){
            System.out.println(req);
            Object[] row = new Object[5];
            row[0] = req.getRequestName();
            row[1] = req;
            row[2] = req.getUnits();         
            row[3] = req.getDate();
            row[4] = req.getStatus();
            model.addRow(row);  
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequestHistory = new javax.swing.JTable();
        representativeJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tblRequestHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request Name", "Type of Volunteer", "Number of Volunteers", "Request Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblRequestHistory);

        representativeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                representativeJComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("Assign Representative:");

        btnAccept.setBackground(new java.awt.Color(255, 255, 255));
        btnAccept.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnAccept.setForeground(new java.awt.Color(0, 255, 204));
        btnAccept.setText("Accept Request");
        btnAccept.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAccept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAcceptMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAcceptMouseExited(evt);
            }
        });
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnReject.setBackground(new java.awt.Color(255, 255, 255));
        btnReject.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnReject.setForeground(new java.awt.Color(0, 255, 204));
        btnReject.setText("Reject Request");
        btnReject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRejectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRejectMouseExited(evt);
            }
        });
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        btnProcess.setBackground(new java.awt.Color(255, 255, 255));
        btnProcess.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnProcess.setForeground(new java.awt.Color(0, 255, 204));
        btnProcess.setText("Process Request");
        btnProcess.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnProcess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnProcessMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnProcessMouseExited(evt);
            }
        });
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel2.setText("Manage Volunteers Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(btnProcess))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addGap(70, 70, 70)
                        .addComponent(representativeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAccept)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReject))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(286, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel2)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReject)
                    .addComponent(btnAccept))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(representativeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102)
                .addComponent(btnProcess)
                .addContainerGap(144, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int row = tblRequestHistory.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        VolunteerRequest fReq=(VolunteerRequest)tblRequestHistory.getValueAt(row, 1);
        if(fReq.getStatus().equalsIgnoreCase("Rejected")){
            JOptionPane.showMessageDialog(null, "Request is rejected already", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(fReq.getStatus().equalsIgnoreCase("Accepted")){
            JOptionPane.showMessageDialog(null, "Request is already accepted", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(fReq.getStatus().equalsIgnoreCase("Processed - Sent to Government Representative")){
            JOptionPane.showMessageDialog(null, "Request is processed already", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(fReq.getStatus().equalsIgnoreCase("Completed")){
            JOptionPane.showMessageDialog(null, "Request is completed already", "Warning", JOptionPane.WARNING_MESSAGE);

        }
        
        else{
        
//        FinanceRequest fReq=(FinanceRequest)tblRequests.getValueAt(row, 1);
        fReq.setStatus("Accepted");
        JOptionPane.showMessageDialog(null, "Request Accepted successfully!!!");
        } 
        populateTable();

    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int row = tblRequestHistory.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        VolunteerRequest fReq=(VolunteerRequest)tblRequestHistory.getValueAt(row, 1);
        if(fReq.getStatus().equalsIgnoreCase("Rejected")){
            JOptionPane.showMessageDialog(null, "Request is rejected already", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(fReq.getStatus().equalsIgnoreCase("Processed - Sent to Government Representative")){
            JOptionPane.showMessageDialog(null, "Request is processed already", "Warning", JOptionPane.WARNING_MESSAGE);
        }
         else if(fReq.getStatus().equalsIgnoreCase("Completed")){
            JOptionPane.showMessageDialog(null, "Request is completed already", "Warning", JOptionPane.WARNING_MESSAGE);

        }
        else{
        
        
        fReq.setStatus("Processed - Sent to Government Representative");
        representative.getVolunteerRequestDirectory().addVolunteerRequest(fReq);
        JOptionPane.showMessageDialog(null, "Request Processed Successfully!!!");
        } 
        populateTable();
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnAcceptMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAcceptMouseEntered
        // TODO add your handling code here:
        btnAccept.setBackground(new Color(0,255,204));
btnAccept.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnAcceptMouseEntered

    private void btnAcceptMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAcceptMouseExited
        // TODO add your handling code here:
        btnAccept.setForeground(new Color(0,255,204));
btnAccept.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_btnAcceptMouseExited

    private void btnRejectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRejectMouseEntered
        // TODO add your handling code here:
        btnReject.setBackground(new Color(0,255,204));
btnReject.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnRejectMouseEntered

    private void btnRejectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRejectMouseExited
        // TODO add your handling code here:
        btnReject.setForeground(new Color(0,255,204));
btnReject.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_btnRejectMouseExited

    private void btnProcessMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProcessMouseEntered
        // TODO add your handling code here:
        btnProcess.setBackground(new Color(0,255,204));
btnProcess.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnProcessMouseEntered

    private void btnProcessMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProcessMouseExited
        // TODO add your handling code here:
        btnProcess.setForeground(new Color(0,255,204));
btnProcess.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_btnProcessMouseExited

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int row = tblRequestHistory.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        VolunteerRequest fReq=(VolunteerRequest)tblRequestHistory.getValueAt(row, 1);
        if(fReq.getStatus().equalsIgnoreCase("Rejected")){
            JOptionPane.showMessageDialog(null, "Request is rejected already", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(fReq.getStatus().equalsIgnoreCase("Accepted")){
            JOptionPane.showMessageDialog(null, "Request is accepted already", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(fReq.getStatus().equalsIgnoreCase("Processed - Sent to Government Representative")){
            JOptionPane.showMessageDialog(null, "Request is processed already", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(fReq.getStatus().equalsIgnoreCase("Completed")){
            JOptionPane.showMessageDialog(null, "Request is completed already", "Warning", JOptionPane.WARNING_MESSAGE);

        }
        else{
        
        
        fReq.setStatus("Rejected");
//        dist.getFinanceRequestDirectory().addFinanceRequest(fReq);
        JOptionPane.showMessageDialog(null, "Request Rejected!!!");
        } 
        populateTable();
        
    }//GEN-LAST:event_btnRejectActionPerformed

    private void representativeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_representativeJComboBoxActionPerformed
        // TODO add your handling code here:
        representative = (Representative) representativeJComboBox.getSelectedItem();
    }//GEN-LAST:event_representativeJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox representativeJComboBox;
    private javax.swing.JTable tblRequestHistory;
    // End of variables declaration//GEN-END:variables
}
